{"title":"基于微服务架构的云原生应用构建指南","date":"2023-03-21T21:43:22.000Z","date_formatted":{"ll":"Mar 21, 2023","L":"03/21/2023","MM-DD":"03-21"},"link":"2023/03/21/micro-service-design","tags":["Design Guidance"],"categories":["Cloud Native","Micro-Service"],"updated":"2023-03-27T15:36:17.044Z","content":"<h2 id=\"云原生（cloud-native）应用\">云原生（Cloud Native）应用<a title=\"#云原生（cloud-native）应用\" href=\"#云原生（cloud-native）应用\"></a></h2>\n<p><strong>云原生应用本质是充分利用云基础架构的特性所构建的分布式系统</strong>。</p>\n<h2 id=\"如何构建云原生应用\">如何构建云原生应用<a title=\"#如何构建云原生应用\" href=\"#如何构建云原生应用\"></a></h2>\n<ul>\n<li>计算的角度：容器技术和函数计算</li>\n<li>架构的角度：微服务架构</li>\n</ul>\n<blockquote>\n<p>理解如何利用好<strong>函数计算和容器技术</strong>，配合事件通知和消息通信相关技术，从而以最有效和快速地构建 <strong>下一代基于微服务架构的云原生应用。</strong></p>\n</blockquote>\n<h2 id=\"微服务\">微服务<a title=\"#微服务\" href=\"#微服务\"></a></h2>\n<h3 id=\"什么是微服务\">什么是微服务<a title=\"#什么是微服务\" href=\"#什么是微服务\"></a></h3>\n<p>有两种角度：一种是指微服务架构风格，另一种是指微服务架构中的各个服务。</p>\n<h3 id=\"微服务的特点\">微服务的特点<a title=\"#微服务的特点\" href=\"#微服务的特点\"></a></h3>\n<ul>\n<li>面向服务的架构体系</li>\n<li>按功能分为小型的，相互低耦合的服务</li>\n<li>应用由多份小型代码库组成</li>\n<li>由独立团队开发和管理（开发，部署，测试）</li>\n<li>相互基于同步或异步的方式进行通信</li>\n</ul>\n<h3 id=\"微服务架构有什么优势\">微服务架构有什么优势<a title=\"#微服务架构有什么优势\" href=\"#微服务架构有什么优势\"></a></h3>\n<ul>\n<li><strong>敏捷性</strong>：快速，可靠地部署</li>\n<li><strong>持续创新</strong>：使得企业具备可快速响应市场的能力，交付新功能或提供新产品</li>\n<li><strong>渐近式设计</strong>：减少单个产品的更改对整个应用的影响，更容易达到高内聚，低耦合的系统设计</li>\n<li><strong>小而专的团队</strong>：更轻松地维护系统，更快地融入团队</li>\n<li><strong>故障隔离</strong>：减少单个服务的故障影响至其他服务以及更快速地定位故障</li>\n<li><strong>更好的扩容和资源利用能力</strong>：合理地安排各个服务所占用的资源，方便地进行应用纵向或横向的扩容，缩容</li>\n<li><strong>改善可观察性</strong>：衡量和监测应用的各个组件的运行状况</li>\n</ul>\n<h2 id=\"微服务架构带来的挑战\">微服务架构带来的挑战<a title=\"#微服务架构带来的挑战\" href=\"#微服务架构带来的挑战\"></a></h2>\n<ul>\n<li>分布式系统的复杂性</li>\n<li>数据完整性和一致性</li>\n<li>性能开销（网络）</li>\n<li>开发和测试</li>\n<li>版本控制和集成</li>\n<li>监控和日志管理</li>\n<li>服务依赖管理</li>\n<li>可用性</li>\n</ul>\n","prev":{"title":"The Best Way To Study English Every Single Day","link":"2023/03/21/the-best-way-to-study-english-every-single-day"},"next":{"title":"【转】MySQL 加锁处理分析","link":"2023/03/01/mysql-lock-analysis"},"plink":"https://hadron404.github.io/blog/2023/03/21/micro-service-design/","toc":[{"id":"云原生（cloud-native）应用","title":"云原生（Cloud Native）应用","index":"1"},{"id":"如何构建云原生应用","title":"如何构建云原生应用","index":"2"},{"id":"微服务","title":"微服务","index":"3","children":[{"id":"什么是微服务","title":"什么是微服务","index":"3.1"},{"id":"微服务的特点","title":"微服务的特点","index":"3.2"},{"id":"微服务架构有什么优势","title":"微服务架构有什么优势","index":"3.3"}]},{"id":"微服务架构带来的挑战","title":"微服务架构带来的挑战","index":"4"}],"reading_time":"513 words in 3 min"}