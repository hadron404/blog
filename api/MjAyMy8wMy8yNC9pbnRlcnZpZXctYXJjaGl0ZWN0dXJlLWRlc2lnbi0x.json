{"title":"研发工程师想要提高面试竞争力，应具备的三个技术认知","date":"2023-03-24T20:50:30.000Z","date_formatted":{"ll":"Mar 24, 2023","L":"03/24/2023","MM-DD":"03-24"},"link":"2023/03/24/interview-architecture-design-1","tags":["interview"],"categories":["architecture-design"],"updated":"2023-03-26T03:29:05.519Z","content":"<h2 id=\"0.-前言\">0. 前言<a title=\"#0.-前言\" href=\"#0.-前言\"></a></h2>\n<p>研发工程师想提升竞争力，需要具备的三个技术认知是什么?</p>\n<p>一个研发工程师不能片面地认为提高自己的技术能力，就可以进行一个从初级-中高级-架构的身份转变，更多的需要从以下三个技术认知来改变：</p>\n<ol>\n<li>对架构设计的认知</li>\n<li>对分析问题的认知</li>\n<li>对能力边界的认知</li>\n</ol>\n<h2 id=\"1.-对架构设计的认知\">1. 对架构设计的认知<a title=\"#1.-对架构设计的认知\" href=\"#1.-对架构设计的认知\"></a></h2>\n<p>如何进行系统架构设计</p>\n<p>关于架构设计的问题，一定要立足于点、连接成线、扩散成面。</p>\n<p>【案例】</p>\n<p>候选者：之前做过一个交易流程系统，拆分成 订单系统、促销系统、报价系统，只有两个人在做开发工作</p>\n<p>面试官：只有两个人在开发，为什么还要进行系统拆分，拆分之后会带来其他复杂度你是如何考虑的？</p>\n<p>候选者：</p>\n<p>从订单系统层面看： 业务不存在很多的迭代需求，如果耦合到整个交易系统中，在其他功能发布线上的时候会影响订单系统</p>\n<p>从促销系统层面看：由于促销系统处于非核心系统，出于保障交易流程稳定性的考虑，在发生异常的时候能让促销系统具有可降级的能力</p>\n<p>从报价系统层面看：是业务中最为灵活和复杂的系统，处于专业化和快速迭代的考虑，目的就是为了快速响应需求的变化。</p>\n<p>从复杂度评估层面看：在规范了 API 的格式定义和调用方式后，系统的复杂度可以维持在可控的范围内。</p>\n<p>点评：这样的回答，很好的表达了对系统设计的理解和思考，说出来原有系统中关于订单、促销、报价系统耦合在一起带来的实际问题，这是<strong>立足于点</strong>，从交易流程角度串联起三个系统拆分逻辑，这是连接成线，最后从复杂度和成本考量的方向，夯实了设计原则，这是扩展成面。</p>\n<p>思考为什么要做架构拆分？其底层设计逻辑是什么</p>\n<p>为什么做架构拆分》 直接目的就是系统的解耦，子系统之间的结构以及模块之间的解耦</p>\n<p>为什么要做系统解耦》使得原本复杂的调用逻辑，能有序地分布在各个独立的系统之中，使得各个系统职能更单一，功能更为内聚。</p>\n<p>为什么要做职责单一》职能单一，功能迭代速度更快，会提高研发团队响应业务需求的速度，提高了团队的开发效率</p>\n<p>为什么要关注开发效率</p>\n<p>架构拆分其实是管理在 <strong>技术</strong> 上 <strong>提效</strong> 的一种手段。</p>\n<h2 id=\"2.-对分析问题的认知\">2. 对分析问题的认知<a title=\"#2.-对分析问题的认知\" href=\"#2.-对分析问题的认知\"></a></h2>\n<p>业务方、管理者、技术人员关注点都是不同的。</p>\n<p>业务方：关注点在系统能力：系统有能力迭代功能来满足市场的需求</p>\n<p>管理者：关注点在人效管理：技术升级之后，系统研发团队的开发效能能得到提升</p>\n<p>技术人员：需要找到自己做系统设计的立足点来满足不同人对技术的诉求，这个立足点通常是系统设计原则</p>\n<p><strong>系统设计原则的提出 是针对 系统现阶段业务发展 带来的主要矛盾提出，才会更有价值且被认可</strong></p>\n<p>【案例】</p>\n<p>早期，业务发展比较简单，团队规模不是很大， 单体系统可以支撑业务的早期规模。</p>\n<p>中后期 ，业务不断发展，团队也逐渐发展成多个业务团队，每个业务团队都会提出自己的功能需求。<br>\n这个时期系统的主要矛盾就变成了多人协作进行复杂业务，导致速度缓慢，但业务需求又快速迭代，此时研发效率不能匹配业务发展的速度，并且单靠加人不能解决问题。<strong>此阶段的系统架构核心原则就不能随便定义为要保证高性能和高可用</strong></p>\n<p>《人月神话》</p>\n<p>软件复杂性来源于亮点：本质复杂度和偶然复杂度</p>\n<p>架构最重要的是要解决<strong>本质复杂性</strong>，这包括人的复杂性和业务的复杂性。</p>\n<h2 id=\"3.-对能力边界的认知\">3. 对能力边界的认知<a title=\"#3.-对能力边界的认知\" href=\"#3.-对能力边界的认知\"></a></h2>\n<p>引申思考：你觉得一个高级研发工程师和一个架构师的区别在哪？</p>\n<p>一些互联网大厂中对中高级研发晋升为架构师的标准：</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"padding:0\"></th>\n<th>中高级研发</th>\n<th>架构师</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>功能性需求</td>\n<td>采用合理的技术实现系统功能性需求</td>\n<td>采用合理的技术设计系统功能性架构</td>\n</tr>\n<tr>\n<td>非功能性需求</td>\n<td>无要求</td>\n<td>在系统高可用、高性能、高扩展、容灾行等技术导向方面做出有价值的贡献</td>\n</tr>\n</tbody>\n</table></div></div><p>互联网大厂职级体系的一个重要的晋升规则就是你所做的事情的边界和所能影响到的范围</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>角色</th>\n<th>系统的驾驭边界</th>\n<th style=\"padding:0\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>中高级研发工程师</td>\n<td>模块或者子系统层面</td>\n<td></td>\n</tr>\n<tr>\n<td>架构师</td>\n<td>全系统层面</td>\n<td></td>\n</tr>\n<tr>\n<td>高级架构师</td>\n<td>某一领域层面</td>\n<td></td>\n</tr>\n</tbody>\n</table></div></div><p><strong>没有触发多系统层面的设计，就不会掌握多系统层面带来的复杂度和解决问题的思考逻辑</strong></p>\n<h2 id=\"4.如何让自己更快速的成长，逐渐提高自己的价值认知与眼界呢？\">4.如何让自己更快速的成长，逐渐提高自己的价值认知与眼界呢？<a title=\"#4.如何让自己更快速的成长，逐渐提高自己的价值认知与眼界呢？\" href=\"#4.如何让自己更快速的成长，逐渐提高自己的价值认知与眼界呢？\"></a></h2>\n<ol>\n<li>在工作中，养成<strong>归纳总结</strong>的习惯</li>\n<li>形成自己的<strong>知识体系</strong></li>\n<li>沉淀自己的方法论</li>\n<li>提升自己的认知能力</li>\n<li>跳出舒适区，多争取扩展自己能驾驭系统的边界的机会</li>\n</ol>\n<h2 id=\"5.-总结\">5. 总结<a title=\"#5.-总结\" href=\"#5.-总结\"></a></h2>\n<p>通过三个案例来说明研发工程师如何提高自己的面试竞争力</p>\n<ol>\n<li>提高对系统架构设计的认知能力：不仅仅是停留在技术解决方案上</li>\n<li>提高分析系统问题的认知能力：做架构设计要根据现阶段的主要矛盾来分析问题的能力</li>\n<li>扩大能够驾驭系统的边界：只有这样才能遇到之前没有经历过的问题层次（不是问题数量）</li>\n</ol>\n","prev":{"title":"认证中心系统设计 一、认识 OAuth","link":"2023/03/25/oauth-system-design"},"next":{"title":"函数式编程","link":"2023/03/22/functional-programming"},"plink":"https://hadron404.github.io/blog/2023/03/24/interview-architecture-design-1/","toc":[{"id":"0.-前言","title":"0. 前言","index":"1"},{"id":"1.-对架构设计的认知","title":"1. 对架构设计的认知","index":"2"},{"id":"2.-对分析问题的认知","title":"2. 对分析问题的认知","index":"3"},{"id":"3.-对能力边界的认知","title":"3. 对能力边界的认知","index":"4"},{"id":"4.如何让自己更快速的成长，逐渐提高自己的价值认知与眼界呢？","title":"4.如何让自己更快速的成长，逐渐提高自己的价值认知与眼界呢？","index":"5"},{"id":"5.-总结","title":"5. 总结","index":"6"}],"reading_time":"1639 words in 11 min"}